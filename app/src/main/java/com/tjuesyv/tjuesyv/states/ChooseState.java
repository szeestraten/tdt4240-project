package com.tjuesyv.tjuesyv.states;

import android.util.Log;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;

import com.firebase.client.DataSnapshot;
import com.firebase.client.FirebaseError;
import com.firebase.client.ValueEventListener;
import com.tjuesyv.tjuesyv.R;
import com.tjuesyv.tjuesyv.firebaseObjects.Game;
import com.tjuesyv.tjuesyv.gameHandlers.GameState;

import java.util.ArrayList;

import butterknife.Bind;
import butterknife.ButterKnife;
import butterknife.OnClick;

/**
 * Created by RayTM on 08.04.2016.
 * In this state, the players get the statement/question on top and a list of options generated by the others players
 * The player is to choose one of these, and can afterwards vote on those he/she liked
 * The game master is just sent to the vote view at once
 * This stage should be timed
 */
public class ChooseState extends GameState {

    @Bind(R.id.chooseContinueButton) Button chooseContinueButton;
    @Bind(R.id.answersView) ListView answerListView;


    private static final int MAIN_VIEW = 3;
    private static final int WAITING_VIEW = 4;

    @Override
    public int getViewId() {
        return MAIN_VIEW;
    }

    @Override
    public void onEnter() {
        // Setup ButterKnife
        ButterKnife.bind(this, handler.getActivityReference());
        setAnswersListView();
    }

    private void setAnswersListView() {
        final ArrayList<String>answersList=new ArrayList<String>();
        answersList.add("Astronaut");
        answersList.add("Muck farmer");
        answersList.add("Eat the rich");

        answerListView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
        //TODO: fill array with answer data from ???
        //TODO: give points to the player with the selected answer

        answerListView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);

        final ArrayAdapter<String> adapter = new ArrayAdapter<>(handler.getActivityReference(),android.R.layout.simple_list_item_single_choice,answersList);


        handler.getFirebaseGameReference().addValueEventListener(new ValueEventListener() {

            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                final Game game=dataSnapshot.getValue(Game.class);
                handler.getFirebaseUsersReference().addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {
                        for (String key:game.getPlayers().keySet()
                                ) {

                            adapter.add(String.valueOf(dataSnapshot.child(key).child("nickname").getValue()));

                        }
                    }

                    @Override
                    public void onCancelled(FirebaseError firebaseError) {

                    }
                });
                answerListView.setAdapter(adapter);
            }

            @Override
            public void onCancelled(FirebaseError firebaseError) {

            }
        });



    }

    @OnClick(R.id.chooseContinueButton)
    protected void goToScore() {
        processAnswer(answerListView.getCheckedItemPosition());

        nextState();
    }

    private void processAnswer(int selectionPos) {
        //TODO: more processing of answers here

    }
}
